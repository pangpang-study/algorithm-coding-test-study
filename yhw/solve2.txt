import java.util.*;
class node{
	int r,c;
	node(int r, int c){
		this.r=r;
		this.c=c;
	}
}
public class Main {
	static int map[][] = new int[9][9];
	static boolean END = false;
	static ArrayList<node> zero = new ArrayList<>();
	public static void main(String[] args){
		Scanner sc = new Scanner(System.in);
		
		for (int i = 0; i < 9; i++) {
			String s = sc.next();
			for (int j = 0; j < 9; j++) {
				map[i][j] = s.charAt(j) - '0';
				if(map[i][j] == 0)
					zero.add(new node(i,j));
			}
		}
		solve(0);
	}
	private static void solve(int idx) {
		if(END) return;
		if(idx == zero.size()) {
			for (int i = 0; i < 9; i++) {
				for (int j = 0; j < 9; j++) {
					System.out.print(map[i][j]);
				}System.out.println();
			}
			END = true;
			return;
		}
		for (int i = 1; i <= 9; i++) {
			if(END) return;
			node cur = zero.get(idx);
			map[cur.r][cur.c] = i;
			if(isPossible(cur.r,cur.c)) {
				solve(idx+1);
			}
			map[cur.r][cur.c] = 0;
		}
	}
	private static boolean isPossible(int r, int c) {
		//가로가능?
		for (int i = 0; i < 9; i++) {
			if(map[r][i] == map[r][c] && c != i)
				return false;
		}
		//세로가능?
		for (int i = 0; i < 9; i++) {
			if(map[i][c] == map[r][c] && r != i)
				return false;
		}
		//3x3 가능?
		for (int i = r-r%3; i < r-r%3+3; i++) {
			for (int j = c-c%3; j < c-c%3+3; j++) {
				if(map[i][j] == map[r][c] && r != i && c != j)
					return false;
			}
		}
		return true;
	}
}